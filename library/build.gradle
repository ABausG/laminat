apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode rootProject.ext.pact_version_code
        versionName rootProject.ext.pact_version
    }
    buildTypes {
        debug {
            debuggable true
        }
        release {
            minifyEnabled false
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //TODO: TRY TO GET RID OF commons-collections4 & kotlin-reflect
    //As well as io.gatling.jsonpath
    
    api "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    api "com.squareup.okhttp3:mockwebserver:$mockserver_version"
    api "org.apache.commons:commons-collections4:$apache_collections_version"
    api "io.gatling:jsonpath_2.11:$jsonpath_version"

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "com.google.code.gson:gson:$gson_version"
    api "org.apache.commons:commons-lang3:$apache_commons_version"
    api "org.apache.httpcomponents:httpcore:$apache_httpcore_version"
    api "joda-time:joda-time:$jodatime_version"
    api "com.github.mifmif:generex:$generex_version"
    api "com.github.zafarkhaja:java-semver:$semver_version"

    testImplementation 'junit:junit:4.12'
}

apply plugin: 'maven-publish'

def coreAarFile = file('build/outputs/aar/library-release.aar')
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

publishing.publications {
    broker(MavenPublication) {
        artifact coreAarFile
        groupId "com.github.janphkre"
        artifactId "laminat-android"
        version "$pact_version"
        //The publication doesn't know about our dependencies, so we have to manually add them to the pom
        pom.withXml {
            def dependenciesNode = asNode().appendNode('dependencies')
            consumeNodes(dependenciesNode, configurations.api.allDependencies)
        }
    }
}

static def consumeNodes(Node dependenciesNode, DependencySet dependencySet) {
    //Iterate over the dependencies (we don't want the test ones), adding a <dependency> node for each
    dependencySet.each {
        if(it instanceof ExternalModuleDependency) {
            def dependencyNode = dependenciesNode.appendNode('dependency')
            dependencyNode.appendNode('groupId', it.group)
            dependencyNode.appendNode('artifactId', it.name)
            dependencyNode.appendNode('version', it.version)
        }
    }
}

publishing.repositories {
    mavenLocal()
}